{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Triple Play Pay",
      "url": "https://www.tripleplaypay.com/api"
    }
  ],
  "info": {
    "description": "Payment API",
    "version": "1.4.0",
    "title": "Triple Play Pay API",
    "contact": {
      "email": "support@tripleplaypay.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "api",
      "description": "Secured API KEY only calls"
    },
    {
      "name": "sandbox",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/charge": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Process payment or settle a previous charge. *card **bank ***terminal",
        "operationId": "charge",
        "description": "Process payment or settle a previous charge. *card **bank ***terminal",
        "parameters": [
          {
            "in": "query",
            "name": "amount",
            "description": "The total transaction amount. This is the amount of funds to move on the card",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "terminal",
            "description": "Initiate a Credit Card Terminal transaction by its laneId or terminalId",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "Transaction ID used to settle an authorized payment method (cc or bank info then not required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cc",
            "description": "Credit Card Number with or without dashes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mm",
            "description": "2 digit month",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "yy",
            "description": "2 digit year",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cvv",
            "description": "Card Verification Value found on the card (CVV2, CVC2, CID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "zip / zipcode",
            "description": "Postal code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountNumber",
            "description": "Bank Account Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "routingNumber",
            "description": "Bank Routing Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Options: checking, savings <code>default</code>: checking",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ticket",
            "description": "Ticket Number used by POS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "items",
            "description": "List of items for receipt and level3 data. <code><br>[[id, price, description, tax, options],]<br>[{\"id\": \"\", \"price\": \"\", \"description\": \"\", \"tax\": \"\", \"options\": \"\"},]</code> ",
            "required": false,
           - "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tax": {
                    "type": "string"
                  },
                  "options": {
                    "type": "string"
                  }
                }
              },
              "example": [
                {
                  "id": 10002302,
                  "price": 12.99,
                  "description": "Burger",
                  "options": "Fries, Coleslaw"
                },
                {
                  "id": 20034343,
                  "price": 7.99,
                  "description": "Red Wine"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "meta",
            "description": "Optional user defined object to be returned with future response",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/authorize": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Used to verify funds when the total amount of the purchase is unknown.",
        "operationId": "authorize",
        "description": "Used to verify funds when the total amount of the purchase is unknown.",
        "parameters": [
          {
            "in": "query",
            "name": "amount",
            "description": "The total transaction amount. This is the amount of funds to move on the card",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cc",
            "description": "Credit Card Number with or without dashes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mm",
            "description": "2 digit Month",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "yy",
            "description": "2 digit Year",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cvv",
            "description": "Card Verification Value found on the card (CVV2, CVC2, CID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "zip / zipcode",
            "description": "Postal code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ticket",
            "description": "Ticket Number used by POS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta",
            "description": "Optional user defined object to be returned with future response",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/settle": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Same as sending a transactionId to charge, this method will settle an outstanding Authorization.",
        "operationId": "settle",
        "description": "Same as sending a transactionId to charge, this method will settle an outstanding Authorization.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Transaction ID of charged event",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ticket",
            "description": "Ticket Number used by POS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta",
            "description": "Optional user defined object to be returned with future response",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/refund": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Credit/Refund transaction used to credit a cardholder for a previous transaction.",
        "operationId": "refund",
        "description": "Credit/Refund transaction used to credit a cardholder for a previous transaction.",
        "parameters": [
          {
            "in": "query",
            "name": "amount",
            "description": "The total transaction amount. This is the amount of funds to move on the card",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cc",
            "description": "Credit Card Number with or without dashes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mm",
            "description": "2 digit month",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "yy",
            "description": "2 digit year",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cvv",
            "description": "Card Verification Value found on the card (CVV2, CVC2, CID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "zip / zipcode",
            "description": "Postal code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ticket",
            "description": "Ticket Number used by POS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta",
            "description": "Optional user defined object to be returned with future response",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/void": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "A Void transaction can be used to back out a previous Sale transaction.",
        "operationId": "void",
        "description": "A Void transaction can be used to back out a previous Sale transaction.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Transaction ID of charged event",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ticket",
            "description": "Ticket Number used by POS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta",
            "description": "Optional user defined object to be returned with future response",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/tokenize": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Create a token for later use.",
        "operationId": "tokenize",
        "description": "Create a token for later use.",
        "parameters": [
          {
            "in": "query",
            "name": "cc",
            "description": "Credit Card Number with or without dashes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mm",
            "description": "2 digit Month",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "yy",
            "description": "2 digit Year",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cvv",
            "description": "Card Verification Value found on the card (CVV2, CVC2, CID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountNumber",
            "description": "Bank Account Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "routingNumber",
            "description": "Bank Routing Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/terminal": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Configure new Credit Card Terminal or get status of existing.",
        "operationId": "terminal",
        "description": "Configure new Credit Card Terminal or get status of existing.",
        "parameters": [
          {
            "in": "query",
            "name": "activationCode",
            "description": "Activation Code on Terminal Screen",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "terminalId",
            "description": "Name of Terminal",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "meta",
            "description": "Optional user defined object to be returned with future response",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/report": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Get transaction detail history",
        "operationId": "report",
        "description": "Get transaction detail history",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Start of date range YYYY-MM-DD <code>*</code>defaults to that month",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "description": "End of date range YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter results on any key value pair. <br>ex: <code>{\"method\":\"charge\"}</code> or nested <code>{\"message\":{\"details\": { \"Batch\": {\"HostItemID\": \"12\"}}}}</code>",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Convert to timezone. <code>default</code>: tz set in client preferences",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/subscription": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Setup a payment subscription or get details/history. Can also send to /api/charge",
        "operationId": "subscription",
        "description": "Setup a payment subscription or get details/history. Can also send to /api/charge",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "GET specific subscription by id.  AN empty call gets a list of all current subscriptions",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cancelId",
            "description": "Subscription ID you want to cancel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "amount",
            "description": "Amount charged per cycle.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "description": "Start of subscription <code>YYYY-MM-DD</code>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "description": "End of subscription. <code>YYYY-MM-DD</code> Empty means forever.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cycles",
            "description": "Set number of iterations. <code>end</code> will be calculated for you. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "interval",
            "description": "<code>daily, weekly, monthly, yearly</code>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "1 means every interval, 2 would mean every other interval <code>*</code> Every other week would be 2",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "Subscribers email address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "payment",
            "description": "Same details as <code>charge</code>. (credit card only method supported currently)",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/client": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Get/Set configuration parameters",
        "operationId": "client",
        "description": "Get/Set configuration parameters",
        "parameters": [
          {
            "in": "query",
            "name": "timezone",
            "description": "Set your timezone",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "Set your notification email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "callback",
            "description": "Set your callback URL for notification of activity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tax",
            "description": "Set your sales tax rate. (This helps simplify receipt generation and level3 detail)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    },
    "/enroll": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Enroll a new child merchant or retrieve status of pending submission.",
        "operationId": "enroll",
        "description": "Enroll a new child merchant or retrieve status of pending submission.",
        "parameters": [
          {
            "in": "query",
            "name": "callback",
            "description": "Optional URL we will forward changes to status to with enrollment payload.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dba_name",
            "description": "Doing Business As name. <code>*</code> Only field necessary for GET.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "website",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fed_tx_id",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "legal_name",
            "description": "Legal Business Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Business Start Date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "account_holder_name",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "account_type",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "account_number",
            "description": "Bank Account to deposit transactions. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "routing_number",
            "description": "Bank Routing Number to deposit transactions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stock_symbol",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ownership_type",
            "description": "[\"Sole Proprietor\", \"C-Corp Private\", \"C-Corp Public\", \"S-Corp Private\", \"S-Corp Public\", \"LLC Private\", \"LLC Public\", \"Not For Profit\", \"Partnership Private\", \"Partnership\", \"Government Agency\"]",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_description",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_phone_number",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_address_1",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_address_2",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_city",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_state_province",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "business_postal_code",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_first_name",
            "description": "Primary Owners First Name. Adding a number to the parameter allows for adding multiple principle owners. Example: <strong>2principle_first_name</strong>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_last_name",
            "description": "Primary Owners Last Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_ssn",
            "description": "Primary Owners Social Security Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_date_of_birth",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_address_line_1",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_address_line_2",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_city",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_state_province",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_postal_code",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_title",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_ownership_percentage",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "principle_phone_number",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error in parameters"
          },
          "500": {
            "description": "error in api call"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "response": {
        "type": "object",
        "required": [
          "name",
          "photoUrls"
        ],
        "properties": {
          "status": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "example": "66a0d1c2-7ad8-41e0-ba8a-0ecf8df0ea15"
          },
          "message": {
            "type": "object",
            "example": {
              "ResponseMessage": "Result of call"
            }
          },
          "meta": {
            "type": "object",
            "example": {
              "Your Key": "Your Value"
            }
          },
          "method": {
            "type": "string",
            "example": "apicall"
          }
        }
      }
    },
    "requestBodies": {
      "response": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/response"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/response"
            }
          }
        },
        "description": "Standard response",
        "required": true
      }
    }
  }
}
